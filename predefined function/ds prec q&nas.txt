//Q1: insert new element in an array
// output = [2, 5, 7, 30, 8,9, 4, 1, 6];

let arr = [2,5,7,8,9,4,1,6];

let index = 3;
let value = 30;

for(let i = arr.length-1; i>=index; i--){
    if(i >= index){
        arr[i+1] = arr[i]
        if(i === index){
            arr[i] = value
        }
       
    }
 
}
 console.log(arr)
...................................................................

//Q2 Delete element in an array
// output = [ 3, 2, 4, 8, 7 ]

let arr = [3,2,5,4,8,7];

function deleteArr(arr){
    let postion = 2;
    for(let i= postion; i<=arr.length-1; i++){
        
        arr[i] = arr[i+1];
    }
    arr.length = arr.length-1;
     return arr

}

const res =  deleteArr(arr);
console.log(res);
........................................................................

//Q3 Delete element in an array at postion 2 and add element at postion 2
// output = [ 3, 2, 15, 4, 8, 7 ]

let arr = [3,2,5,4,8,7];

function deleteArr(arr){
    let postion = 2;
    let addEle = 15
    for(let i= postion; i<=arr.length-1; i++){
        // delete ele 
        arr[i] = arr[i+1];
        // add ele
         if(i >= postion){
            arr[i+1] = arr[i];
            if(i===postion){
                arr[i] = addEle
            }
        }
             return arr
    }
}
const res =  deleteArr(arr);
console.log(res);
..............................................................................

// Q4 search element in array find index number
// output = 3
let arr = [2,55,44,11,66,33,88];
function search(arr){
    let search = 11;
    let index = undefined;
    for(let i=0; i<arr.length; i++){
        if(arr[i] === search){
            index = i;
               break;
        }
    }
    return index
}
const res = search(arr);
console.log(res);
..................................................................................
//Q5 search element in array and delete the element which you are searched
// output = [2,55,44,11,66,88]
let arr = [2,55,44,11,66,33,88];
function search(arr){
    let search = 33;
    for(let i=0; i<=arr.length; i++){
        if(arr[i] === search){
            for(let j=i; j<arr.length-1; j++){
                console.log(arr[j])
                 arr[j] = arr[j+1];
            }
            arr.length = arr.length-1;
          break;
            
        }
       
    }
    return arr

}
const res = search(arr);
console.log(res);
.......................................................................................
//Q6 Merge two Array
// output = [1, 2, 3, 4, 5,6, 7, 8, 9]

let arr1 = [1,2,3,4,5];
let arr2 = [6,7,8,9];

function mergeArr(arr1 , arr2){
    let newArr=[]
    for(let i=0; i<arr1.length; i++){
        newArr[i] = arr1[i];
    }
    console.log(newArr);
        for(let j=0; j<arr2.length; j++){
            newArr[arr1.length + j] = arr2[j]
    }
    return newArr;
}

const res = mergeArr(arr1,arr2);
console.log(res);
.........................................................................................
//Q7 Merge two Array and delete element in An array
// output = [1, 2, 3, 4, 5,6, 7, 8, 9]

let arr1 = [1,2,3,4,5];
let arr2 = [6,7,8,9];

function mergeArr(arr1 , arr2){
    let newArr=[]
    let index = 3;
    value = 40;
    for(let i=0; i<arr1.length; i++){
        newArr[i] = arr1[i];
    }
        for(let j=0; j<arr2.length; j++){
            newArr[arr1.length + j] = arr2[j]
    }
    for(let i=3; i<=newArr.length-1; i++){
        newArr[i] = newArr[i+1];
        
    }
    newArr.length -=1;
    return newArr
}

const res = mergeArr(arr1,arr2);
console.log(res);
........................................................
// Q8 find smallest element in an array
let arr = [22,55,44,88,44,11,66];

function min(arr){
    let min = arr[0];
    for(let i=0; i<arr.length; i++){
        if(arr[i] < min){
            min = arr[i];
        }
    }
    return min
    
}

const res = min(arr);
console.log(res);
..........................................................
//Q9 factorial 

function factorial(num){
    if(num < 0) return "Enter valid number"
    if(num === 1) return 1;
    
    return num * factorial(num - 1);
}
const res = factorial(7);
console.log(res)
.................................................................
//Q10 fibonacci number

function fibonacci(num){
    let pre = 0;
    let next = 1;
    let temp=0;
    for(let i=0; i<=num; i++){
         temp = pre+next;
            pre = next;
            next = temp;
            
         
    }
    return next
    
}

const res = fibonacci(10)
console.log(res);
..................................................................
//Q11  palindrome

function palindrome(str){
    let left = 0;
    let right = str.length-1;
    if(str.length === 1) return true;
    while(left < right){
        if(str[left] !== str[right]){
            return false;
            left ++;
            right --;
        }
        return true;
    }

}
const res = palindrome("mam");
console.log(res);
.....................................................................

//Q12  get sum pair of zero
// o/p= [-4,4]
let arr = [-5,-4,-2,0,2,4,6,8]
function sumofPairZero(arr){
 let left = 0;
 let right = arr.length-1;
 
 while(left < right){
     let sum = arr[left] + arr[right]
     
     if(sum === 0){
         return [arr[left] , arr[right]]
     }else if(sum > 0){
         right--;
     }else{
         left ++;
     }
 }

}
const res = sumofPairZero(arr);
console.log(res);
........................................................................
//Q13 remove duplicate element in an array
//o/p = [1,2,3,4,5,6,7,8,9]
let arr = [1,2,2,3,4,4,5,5,6,7,8,9,9];

function removeDuplicate(arr){
    let uniqueArr = [];
    
    for(let i=0; i<arr.length; i++){
        let isDuplicate = false;
        for(let j=0; j<uniqueArr.length; j++){
            if(arr[i] === uniqueArr[j]){
                isDuplicate = true;
                break;
            }
        }
                if(!isDuplicate){
            uniqueArr.push(arr[i])
          
        }
    }
     return uniqueArr;
  
}

const res = removeDuplicate(arr);
console.log(res);